syntax = "proto3";


package Mocap;

service MocapServer{
    rpc GetEnvironment(EnvironmentRequest) returns (Environment){}
    rpc GetStructure(StructureRequest)   returns (StructureResponse){}
    rpc GetMocapStream(MocapStreamRequest) returns (stream MocapStreamResponse){}

}

message Environment{
    enum DirectionType {
        LEFT_HAND = 0;
        RIGHT_HAND=1;
    }

    enum DistanceUnits {
        MM = 0;
        CM=1;
        M = 2;
    }
    enum TimeUnits {
        SEC = 0;
        MILS=1;
        NSEC = 2;
    }

    float gravity = 1;
    DistanceUnits distUnits = 2;
    TimeUnits timeUnits = 3;
    DirectionType directionType=4;
}



message Translation
{
    float x = 1;
    float y = 2;
    float z = 3;
}


message Orientation{
    enum RotationType {
        QUATERNION = 0;
        MATRIX = 1;
        EULER_XYZ = 2;
        EULER_XZY = 3;
        EULER_YXZ = 4;
        EULER_YZX = 5;
        EULER_ZXY = 6;
        EULER_ZYX = 7;
        EULER_XY = 8;
        EULER_YX = 9;
        EULER_XZ = 10;
        EULER_ZX = 11;
        EULER_YZ = 12;
        EULER_ZY = 13;
        EULER_X = 14;
        EULER_Y = 15;
        EULER_Z = 16;
    }
    RotationType rotationType = 1;
    repeated float rotationValues = 2;
}


message Transform {
    optional Translation translation = 1;
    Orientation orientation = 2;
}

////////////////////////////////////
// per-human structure data
message Link {
    string name = 1;
    uint32 linkId = 2;
    int32 parentLinkId = 3;
    Transform offset = 4; //offset to the parent
    float mass = 5;
    repeated float linkSize = 6;
    repeated float inertialMatrix = 7;
}

message JointMeta {
    uint32 jointId = 1;
    uint32 linkId = 2;
    string name = 3;
}


message Structure {
    uint32 structureId = 1;
    StructureType structureType = 2;
    string name = 3;
    repeated Link links = 4;
    repeated JointMeta joints = 5;
}

///////////////////////////////////////
// per-frame data
message Joint {
    uint32 jointId = 1;
    Transform transform = 2;
}

message Pose {
    uint32 subjectId = 1;
    uint64 timestamp = 2;
    repeated Joint joints = 3;
}


/////////////////////////////////////
message EnvironmentRequest{
}


message MocapStreamRequest {
    float fps = 1;
}

message MocapStreamResponse {
    repeated Pose poses = 1;
    float serverTime = 2;
}

message StructureRequest{
    repeated uint32 structureId = 1;
}
message StructureResponse {
    repeated Structure structures = 1;
}

////

enum StructureType {
        HUMAN = 0;
        BALL=1;
        BIKE = 2;
}


